{"version":3,"sources":["hooks/form.js","context/settings/settings.js","components/List.js","components/Form.js","components/todo.js","components/Header.js","components/Footer.js","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","console","log","target","name","value","handleSubmit","preventDefault","settingsContext","React","createContext","settings","props","state","itemsPerPage","sort","show","Provider","this","children","Component","List","useContext","currentPage","setCurrentPage","list","incomplete","slice","activeList","setactiveList","Math","ceil","length","pagesNum","setPagesNum","useEffect","start","end","changePage","pageNum","Pages","pagesArr","push","class","type","onClick","i","className","map","item","interactive","elevation","Elevation","THREE","text","assignee","difficulty","complete","toggleComplete","id","toString","Form","onSubmit","labelFor","labelInfo","onChange","placeholder","defaultValue","min","max","ToDo","setList","setIncomplete","uuid","incompleteCount","filter","document","title","items","Header","Group","Heading","Divider","Footer","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.06167fa5.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = callback => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    callback(values);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    console.log('CHANGE', event.target.name);\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React, { Component } from 'react';\nexport const settingsContext = React.createContext();\n\nexport default class settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemsPerPage: 2,\n      sort: 'Ascending',\n      show: true, \n    };\n  }\n\n  render() {\n    return (\n      <settingsContext.Provider value={this.state}>\n        {this.props.children}\n      </settingsContext.Provider>\n    );\n  }\n}","import React, { useContext, useState, useEffect } from 'react';\nimport { settingsContext } from '../context/settings/settings';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nexport default function List(props) {\n    const settings = useContext(settingsContext);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [activeList, setactiveList] = useState(\n      (settings.show ? props.list : props.incomplete).slice(\n        0, settings.itemsPerPage)\n    );\n    const [pagesNum, setPagesNum] = useState(\n      Math.ceil(props.list.length / settings.itemsPerPage)\n    );\n  \n    useEffect(() => {\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(\n          0,\n          settings.itemsPerPage\n        )\n      );\n\n      setPagesNum(\n        Math.ceil(\n          (settings.show ? props.list : props.incomplete).length /\n            settings.itemsPerPage\n        )\n      );\n    }, [props.list, props.incomplete]);\n  \n    useEffect(() => {\n      let start = (currentPage - 1) * settings.itemsPerPage;\n      let end = start + settings.itemsPerPage;\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(start, end)\n      );\n    }, [currentPage, settings.itemsPerPage]);\n  \n    const changePage = (pageNum) => {\n      if (pageNum !== currentPage) setCurrentPage(pageNum);\n    };\n  \n    const Pages = () => {\n      let pagesArr = [];\n      if (currentPage > 1) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage - 1);\n            }}\n          >\n            previous\n          </Button>\n        );\n      }\n  \n      for (let i = 1; i <= pagesNum; i++) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(i);\n            }}\n            key={i}\n          >\n            {i}\n          </Button>\n        );\n      }\n  \n      if (currentPage <= pagesNum) {\n        pagesArr.push(\n          <Button\n            class=\".bp3-active\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage + 1);\n            }}\n          >\n            next\n          </Button>\n        );\n      }\n  \n      return <div className=\"pages\"> {pagesArr} </div>;\n    };\n  \n    return (\n      <div>\n        <Card className=\"mainItem2\">\n          <h3 className=\"list\">Items List</h3>\n          {activeList.map((item) => (\n            <Card\n              className=\"listCard\"\n              interactive={true}\n              elevation={Elevation.THREE}\n              key={item.id}\n            >\n              <h3>\n                <b>{item.text} </b>\n              </h3>\n              <p>\n                <b>Assigned to</b> : {item.assignee}\n              </p>\n              <p>\n                <b>Difficulty</b> : {item.difficulty}\n              </p>\n              <Button\n                class=\"@ns-button\"\n                type=\"button\"\n              \n                className={\n                  item.complete ? 'bp3-intent-success' : 'bp3-intent-danger'\n                }\n                onClick={() => props.toggleComplete(item.id)}\n              >\n                Complete : {item.complete.toString()}\n              </Button>\n            </Card>\n          ))}\n        </Card>\n        <Pages />\n      </div>\n    );\n  }","import React from 'react';\nimport { Card, Button, FormGroup, InputGroup } from '@blueprintjs/core';\n\nexport default function Form({ handleSubmit, handleChange }) {\n  return (\n    <Card className=\"mainItem\" interactive={true}>\n      <h3 class=\"list\">Add new Task </h3>\n      <br></br>\n      <form onSubmit={handleSubmit}>\n        <FormGroup labelFor=\"text-input\" labelInfo=\"(required)\">\n          <label><b>Task :</b></label>\n          <br></br>\n          <br></br>\n          <InputGroup\n            onChange={handleChange}\n            name=\"text\"\n            id=\"text-input\"\n            placeholder=\"Item Details\"\n          />\n          <br></br>\n          <label><b>Assigned To:</b></label>\n          <br></br>\n          <br></br>\n          <InputGroup\n            onChange={handleChange}\n            name=\"assignee\"\n            id=\"text-input\"\n            placeholder=\"Assignee Name\"\n          />\n           <br></br>\n          <div className='diff'>\n          <lable><b>Difficulty</b></lable>\n          <br></br>\n          <input\n            onChange={handleChange}\n            defaultValue={2}\n            type=\"range\"      \n            min={1}\n            max={5}\n            name=\"difficulty\"\n          />\n          </div>\n<div >\n          <Button className='button' type=\"submit\">Add Task</Button>\n          </div>\n        </FormGroup>\n      </form>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport useForm from '../hooks/form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport Form from './Form';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete.length}`;\n  }, [list]);\n\n  return (\n    <div className=\"main\">\n      <h3 id='h2'>Number of Pending Tasks ({incomplete.length})</h3>\n\n      <div className=\"mainCards\">\n        <Form\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n        <List\n          incomplete={incomplete}\n          list={list}\n          toggleComplete={toggleComplete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;","import React from 'react';\nimport { Navbar } from \"@blueprintjs/core\";\n\nexport default function Header() {\n    return (\n        <>\n        \n        <Navbar className=\"header\">\n        <br></br>\n        <Navbar.Group top-margin={10 }>\n            <Navbar.Heading ><h2>home</h2></Navbar.Heading>\n            <Navbar.Divider />\n        </Navbar.Group>\n    </Navbar>\n    </>\n    );\n  }","import React from 'react';\n\nfunction Footer(){\n    return <footer>&copy; Shams Alsaraireh</footer>;\n}\n\n\nexport default Footer;","import React from 'react';\nimport ToDo from './components/todo';\nimport SettingsContext from './context/settings/settings';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './app.scss';\n\nfunction App() {\n    return (\n      <>\n         <SettingsContext>\n          <Header />\n          <ToDo />\n         \n        </SettingsContext>\n        <Footer />\n      </>\n    );\n  }\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}